const findSum = function(array) {
  var numbers = [2,4,6]

  var sum = numbers.reduce(function(sum, number){
    return sum + number;
  }, 0)
};

const findFrequency = function(array) {
  var array = ['a', 'b', 'c', 'a', 'b', 'c', 'a', 'a', 'd'];
  var count ={};
  for (var i = 0; i < array.length; i++) {
    var num = array[i];
    
    count[num] = count[num] ? count[num] + 1:1;
return count
}};

const isPalindrome = function(str) {
  var stringBackwards = string.split("").reverse().join("");
  // console.log(stringBackwards) leaving this here because I thought my above code was wrong and I need to learn why it's right.
  var palindromeCheck = function(string, stringBackwards){
    if (string === stringBackwards){
      console.log('Is a Palindrome')
      return palindromeCheck
    }else{
      console.log('Not a Palindrome')
    }
};

const largestPair = function(array) {
  var inputArray = [2,1,-1,480,300,5,6,2]
function adjacentElementsProduct(inputArray) {
  var arrayInput = inputArray;
   var x=0;
   var y=0;
   var p=-500;
   for(var i=0;i<arrayInput.length;i++){
     x=arrayInput[i];
     y=arrayInput[i+1];
     if(x*y>p){
      p=x*y;
     };
   };
  return p;
};
}

const removeParenth = function(str) {
  var array3 =['i','d','o','(','n','o','t',')','l','i','k','e','t','o','c','o','d','e',]
  array3.splice(3,5)
  var string3 = array3.toString()
  var string4 = string3.replace(/[,]/g,'')
};

const scoreScrabble = function(str) {
  let result = 0;
  var mapping = {
      1: ['A', 'E', 'I', 'O', 'U', 'L', 'N', 'R', 'S', 'T'],
      2: ['D', 'G'],
      3: ['B', 'C', 'M', 'P'],
      4: ['F', 'H', 'V', 'W', 'Y'],
      5: ['K'],
      8: ['J', 'X'],
      10: ['Q', 'Z'],
  };
  for (const letter of word) {
      for (const key in mapping) {
          if (mapping[key].includes(letter.toUpperCase()))
              result += parseInt(key);
      }
  }
  return result;
}}
